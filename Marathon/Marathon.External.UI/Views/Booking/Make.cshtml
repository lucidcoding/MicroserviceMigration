@using System.Data.Entity.Core.Objects
@using Marathon.External.UI.Extensions
@model Marathon.External.UI.ViewModels.Booking.MakeViewModel

@{
    ViewBag.Title = "Book a Vehicle";
}

<h1>Book a Vehicle</h1>

@using (Html.BeginForm("Make", "Booking", FormMethod.Post, new { role = "form", @class = "form-horizontal" }))
{
    @Html.ValidationSummary(false, "There were some problems with the information you entered, please correct and resubmit.")
    <div class="form-group">
        @Html.LabelFor(model => model.VehicleId, new { @class = "control-label col-sm-3" })
        <div class="col-sm-6">
            @Html.ValidationMessageFor(model => model.VehicleId)
            @Html.DropDownListFor(model => model.VehicleId, Model.VehicleOptions, new { @class = "form-control" })
        </div>
    </div>
    <div id="pendingBookingsForVehicleDiv">
        @if (Model.PendingBookings.Any())
        {
            @Html.Partial("_PendingForVehicle", Model.PendingBookings)
        }
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.StartDate, new { @class = "control-label col-sm-3" })
        <div class="col-sm-6">
            @Html.ValidationMessageFor(model => model.StartDate)
            @Html.BootstrapDatePickerFor(model => model.StartDate)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.EndDate, new { @class = "control-label col-sm-3" })
        <div class="col-sm-6">
            @Html.ValidationMessageFor(model => model.EndDate)
            @Html.BootstrapDatePickerFor(model => model.EndDate)
        </div>
    </div>
    <div class="form-group">        
        <div class="col-sm-offset-3 col-sm-9">
            <button type="submit" class="btn btn-success">Submit</button>
            @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-primary" })
        </div>
    </div>
}

@section Scripts
{
    @Scripts.Render("~/bundles/Booking/Make")
}